//Modular Class Installer
#define ClassInstaller(arg000,arg001,arg002,arg003,arg004,arg005,arg006,arg007,arg008,arg009,arg010,arg011,arg012,arg013,arg014,arg015,arg016,arg017,arg018,arg019,arg020,arg021,arg022,arg023,arg024,arg025,arg026,arg027,arg028,arg029,arg030,arg031,arg032,arg033,arg034,arg035,arg036,arg037,arg038,arg039,arg040,arg041,arg042,arg043,arg044,arg045,arg046,arg047,arg048,arg049,arg050,arg051,arg052,arg053,arg054,arg055,arg056) "SHORT arg000 arg001 ;BYTE arg002 arg003 arg004 arg005 ;SHORT arg006 ;BYTE arg007 arg008 arg009 arg010 arg011 arg012 arg013 arg014 arg015 arg016 arg017 arg018 arg019 arg020 arg021 arg022 arg023 arg024 arg025 arg026 arg027 arg028 arg029 arg030 arg031 arg032 arg033 arg034 arg035 arg036 arg037 arg038 arg039 arg040 arg041 arg042 arg043 arg044 arg045 arg046 arg047 arg048 ;WORD arg049 arg050 arg051 arg052 arg053 arg054 arg055 arg056 "
#define MovingMapSpriteInstaller(arg000,arg001) "WORD arg000 arg001 "
#define StandingMapSpriteInstaller(arg000,arg001,arg002,arg003,arg004) "BYTE arg000 arg001 arg002 arg003 ;WORD arg004 "
//#define SetClassCard(ClassID,CardID) "PUSH; ORG ClassTable + (84 * ClassID) + 0x8; BYTE CardID ; POP"
//#define SetAnimation(ClassID,Animation) "PUSH; ORG ClassTable + (84 * ClassID) + 0x34; POIN Animation; POP"

//Modular Item Installer
#define WeaponIconOffset(iconID) "NewItemIcons + 0x80*iconID"
#define ItemInstaller(arg000,arg001,arg002,arg003,arg004,arg005,arg006,arg007,arg008,arg009,arg010,arg011,arg012,arg013,arg014,arg015,arg016,arg017,arg018,arg019,arg020,arg021,arg022,arg023,arg024,arg025) "SHORT arg000 arg001 arg002 ;BYTE arg003 arg004 arg005 arg006 arg007 arg008 ;WORD arg009 arg010 ;BYTE arg011 arg012 arg013 arg014 arg015 arg016 ;SHORT arg017 ;BYTE arg018 arg019 arg020 arg021 arg022 arg023 arg024 arg025 "
#define SpellAssociationEditor(arg000,arg001,arg002,arg003,arg004,arg005,arg006,arg007,arg008,arg009) "SHORT arg000 arg001 ;BYTE arg002 arg003 ;SHORT arg004 ;WORD arg005 ;BYTE arg006 arg007 arg008 arg009 "
#define StatBonus(HPB,StrB,MagB,SklB,SpdB,DefB,ResB,LckB,MovB,ConB) "BYTE HPB StrB SklB SpdB DefB ResB LckB MovB ConB MagB 0x0 0x0"
//#define SetItemRange(itemId,range) "PUSH; ORG ExpandedItemTable + (itemId * 0x24) + 0x19; BYTE range; POP"
//#define SetItemText(itemId,name,description) "PUSH; ORG ExpandedItemTable + (itemId * 0x24); SHORT name description; POP"
#define SetItemEffect(usability,psusability,targeting,effect) "WORD usability psusability targeting effect"
#define SetItemEffectAnim(id,nochars,rangeanim,rangeanimenable,mapanim,pos,facepos,attackcolor) "SHORT id nochars; BYTE rangeanim rangeanimenable; SHORT id; WORD mapanim; BYTE pos facepos attackcolor 0x0"
#define SetStaffAI(id,ai) "BYTE id 0x0 0x0 0x0; WORD ai|IsPointer"

//Modular Character Installer
#define UnitInstaller(arg000,arg001,arg002,arg003,arg004,arg005,arg006,arg007,arg008,arg009,arg010,arg011,arg012,arg013,arg014,arg015,arg016,arg017,arg018,arg019,arg020,arg021,arg022,arg023,arg024,arg025,arg026,arg027,arg028,arg029,arg030,arg031,arg032,arg033,arg034,arg035,arg036,arg037,arg038,arg039,arg040,arg041,arg042,arg043,arg044,arg045) "SHORT arg000 arg001 ;BYTE arg002 arg003 ;SHORT arg004 ;BYTE arg005 arg006 arg007 arg008 arg009 arg010 arg011 arg012 arg013 arg014 arg015 arg016 arg017 arg018 arg019 arg020 arg021 arg022 arg023 arg024 arg025 arg026 arg027 arg028 arg029 arg030 arg031 arg032 arg033 arg034 arg035 arg036 arg037 arg038 arg039 arg040 ;WORD arg041 ;BYTE arg042 arg043 arg044 arg045 "
#define SupportInstaller(arg000,arg001,arg002,arg003,arg004,arg005,arg006,arg007,arg008,arg009,arg010,arg011,arg012,arg013,arg014,arg015,arg016,arg017,arg018,arg019,arg020,arg021,arg022,arg023) "BYTE arg000 arg001 arg002 arg003 arg004 arg005 arg006 arg007 arg008 arg009 arg010 arg011 arg012 arg013 arg014 arg015 arg016 arg017 arg018 arg019 arg020 arg021 arg022 arg023 "
#define UnitAnim(UnitID,ClassID,Animation) "BYTE UnitID ClassID 0x0 0x0; WORD Animation|IsPointer"
#define Negative(number) "0x100 - number" //this is pointless just use (-number) in parenthesis

//Quote Tables
#define AlwaysDeathQuote(arg000,arg001,arg002) "BYTE arg000 0x0 0xff 0xff arg001 0x0 ;SHORT arg002 ;WORD 0x0 "
#define ChapterDeathQuote(arg000,arg001,arg002,arg003) "BYTE arg000 0x0 0xff arg001 arg002 0x0 ;SHORT arg003 ;WORD 0x0 "
#define EndDeathQuote "BYTE 0xff 0xff 0x0 0x0 0x0 0x0 ;SHORT 0x0 ;WORD 0x0 "
#define BattleQuote(arg000,arg001,arg002,arg003) "BYTE arg000 0x0 arg001 0x0 arg002 0x0 0x1 0x0 ;SHORT arg003 ;BYTE 0x0 0x0 0x0 0x0 0x0 0x0 "
#define BattleQuoteFlag(flag,arg000,arg001,arg002,arg003) "BYTE arg000 0x0 arg001 0x0 arg002 0x0 flag 0x0 ;SHORT arg003 ;BYTE 0x0 0x0 0x0 0x0 0x0 0x0 "
#define TwoWayBattleQuote(arg000,arg001,arg002,arg003) "BattleQuote(arg000,arg001,arg002,arg003);BattleQuote(arg001,arg000,arg002,arg003)"
#define TwoWayBattleQuoteFlag(flag,arg000,arg001,arg002,arg003) "BattleQuoteFlag(flag,arg000,arg001,arg002,arg003);BattleQuoteFlag(flag,arg001,arg000,arg002,arg003)"
#define EndQuote "BYTE 0xff 0xff"

//Support Table
#define SupportEntry(arg000,arg001,arg002,arg003,arg004) "BYTE arg000 0x0 arg001 0x0 ;SHORT arg002 arg003 arg004 ;BYTE 0x0 0x0 0x0 0x0 0x0 0x0 "
#define EndSupport "BYTE 0xff 0xff "

//Summoning Table
#define SummonEntry(Unit, Summon) "BYTE Unit Summon"
#define EndSummons "SHORT 0x0"

//Tileset
#define ChapterTileset(chapter, object, palette, config) "PUSH; ORG 0x8b0890 + (148* chapter) + 4; SHORT object; BYTE palette config; POP"
#define ChapterTileAnims(chapter, anim1, anim2) "PUSH; ORG 0x8b0890 + (148* chapter) + 9; BYTE anim1 anim2; POP"
#define TilesetAnimation(speed, size, pointer) "BYTE speed 0; SHORT size; POIN pointer"
#define AnimType2Installer(PaletteData,Interval,DataSize,PaletteNo) "WORD PaletteData|IsPointer; BYTE Interval DataSize PaletteNo 0x0"

//Animation Assembler
#define SwordAnim(Animation) "BYTE Swords 0x01 ; SHORT Animation"
#define SpearAnim(Animation) "BYTE Lances 0x01 ; SHORT Animation"
#define LanceAnim(Animation) "BYTE Lances 0x01 ; SHORT Animation"
#define AxeAnim(Animation) "BYTE Axes 0x01 ; SHORT Animation"
#define HandAxeAnim(Animation) "BYTE HandAxe 0x00 ; SHORT Animation ; BYTE Tomahawk 0x00 ; SHORT Animation ; BYTE Hatchet 0x00 ; SHORT Animation"
#define HandaxeAnim(Animation) "BYTE HandAxe 0x00 ; SHORT Animation ; BYTE Tomahawk 0x00 ; SHORT Animation ; BYTE Hatchet 0x00 ; SHORT Animation"
#define BowAnim(Animation) "BYTE Bows 0x01 ; SHORT Animation"
#define StaffAnim(Animation) "BYTE Staves 0x01 ; SHORT Animation"
#define AnimaAnim(Animation) "BYTE Anima 0x01 ; SHORT Animation"
#define LightAnim(Animation) "BYTE Light 0x01 ; SHORT Animation"
#define DarkAnim(Animation) "BYTE Dark 0x01 ; SHORT Animation"
#define MagicAnim(Animation) "BYTE Anima 0x01 ; SHORT Animation ; BYTE Light 0x01 ; SHORT Animation ; BYTE Dark 0x01 ; SHORT Animation"
#define BallistaAnim(Animation) "BYTE Ballista 0x00 ; SHORT Animation ; BYTE IronBallista 0x00 ; SHORT Animation ; BYTE KillerBallista 0x00 ; SHORT Animation"
#define UnarmedAnim(Animation) "BYTE Disarmed 0x01 ; SHORT Animation"
#define DisarmedAnim(Animation) "BYTE Disarmed 0x01 ; SHORT Animation"
#define SpecialAnim(Animation,Weapon) "BYTE Weapon 0x00 ; SHORT Animation"
#define EndAnim "WORD 0x0"

//Chapter Data Setter
#define ChapterDataSetter(ChapterID,ChapterName,FogSightRange,xcoord,ycoord,ChapterWeather,HardBonusLevels,NormalPenaltyLevels,EasyPenaltyLevels,PlayerMusic,EnemyMusic,NPCMusic,PlayerBattleMusic,EnemyBattleMusic,NPCBattleMusic,PlayerMusic2,EnemyMusic2,PrepScreenMusic,WallHP,EnemiesForVictoryMusic,ChapterFadeToBlack,ObjectiveText,DetailObjectiveText,TurnLimit,DefendUnit,ObjectiveDisplay,ChapterBattleBackground) "PUSH;ORG ChapterDataTable+(ChapterID*0x94) + 0x70; SHORT ChapterName ;ORG ChapterDataTable+(ChapterID*0x94) + 12;BYTE FogSightRange; ORG ChapterDataTable+(ChapterID*0x94) + 0x10; BYTE xcoord ycoord; ORG ChapterDataTable+(ChapterID*0x94) + 18;BYTE ChapterWeather;BYTE ChapterBattleBackground;ORG ChapterDataTable+(ChapterID*0x94) + 20;BYTE (HardBonusLevels<<4)|EasyPenaltyLevels;BYTE NormalPenaltyLevels;SHORT PlayerMusic;SHORT EnemyMusic;SHORT NPCMusic;SHORT PlayerBattleMusic;SHORT EnemyBattleMusic;SHORT NPCBattleMusic;SHORT PlayerMusic2;SHORT EnemyMusic2; SHORT PrepScreenMusic;ORG ChapterDataTable+(ChapterID*0x94) + 44;BYTE WallHP;ORG ChapterDataTable+(ChapterID*0x94) + 134;BYTE EnemiesForVictoryMusic;BYTE ChapterFadeToBlack; SHORT ObjectiveText DetailObjectiveText;ORG ChapterDataTable+(ChapterID*0x94) + 140;BYTE ObjectiveDisplay;BYTE TurnLimit;BYTE DefendUnit;POP"

//Force Deployer
#define ForceDeployEntry(unit,chapterID) "SHORT unit; BYTE 0xFF chapterID"
#define EndForceDeploy "SHORT 0xFFFF 0x00"

//JumpToHack
#define jumpToHack_r0(offset) "SHORT 0x4800 0x4700 ; POIN (offset|1)"
#define jumpToHack_r1(offset) "SHORT 0x4900 0x4708 ; POIN (offset|1)"
#define jumpToHack_r2(offset) "SHORT 0x4A00 0x4710 ; POIN (offset|1)"
#define jumpToHack_r3(offset) "SHORT 0x4B00 0x4718 ; POIN (offset|1)"

//ASMC Check Suite
#define CheckLevel(Character) "SVAL 0x1 Character; ASMC CheckLevelASMC|1"
#define CheckExperience(Character) "SVAL 0x1 Character; ASMC CheckExperienceASMC|1"
#define CheckMaxHP(Character) "SVAL 0x1 Character; ASMC CheckMaxHPASMC|1"
#define CheckCurrentHP(Character) "SVAL 0x1 Character; ASMC CheckCurrentHPASMC|1"
#define CheckStrength(Character) "SVAL 0x1 Character; ASMC CheckLStrengthASMC|1"
#define CheckSkill(Character) "SVAL 0x1 Character; ASMC CheckSkillASMC|1"
#define CheckSpeed(Character) "SVAL 0x1 Character; ASMC CheckSpeedASMC|1"
#define CheckDefense(Character) "SVAL 0x1 Character; ASMC CheckDefenseASMC|1"
#define CheckResistance(Character) "SVAL 0x1 Character; ASMC CheckResistanceASMC|1"
#define CheckConstitution(Character) "SVAL 0x1 Character; ASMC CheckConstitutionASMC|1"
#define CheckMovement(Character) "SVAL 0x1 Character; ASMC CheckMovementASMC|1"
#define CheckInventory(Character,Item) "SVAL 0x1 Character; SVAL 0x2 Item; ASMC CheckHasItemASMC|1"
#define CheckSwordRank(Character) "SVAL 0x1 Character; ASMC CheckSwordRankASMC|1"
#define CheckLanceRank(Character) "SVAL 0x1 Character; ASMC CheckLanceRankASMC|1"
#define CheckAxeRank(Character) "SVAL 0x1 Character; ASMC CheckAxeRankASMC|1"
#define CheckBowRank(Character) "SVAL 0x1 Character; ASMC CheckBowRankASMC|1"
#define CheckStaffRank(Character) "SVAL 0x1 Character; ASMC CheckStaffRankASMC|1"
#define CheckAnimaRank(Character) "SVAL 0x1 Character; ASMC CheckAnimaRankASMC|1"
#define CheckLightRank(Character) "SVAL 0x1 Character; ASMC CheckLightRankASMC|1"
#define CheckDarkRank(Character) "SVAL 0x1 Character; ASMC CheckDarkRankASMC|1"
#define CheckStatusEffect(Character) "SVAL 0x1 Character; ASMC CheckStatusEffectASMC|1"
#define CheckStatusDuration(Character) "SVAL 0x1 Character; ASMC CheckStatusDurationASMC|1"
#define CheckMagic(Character) "SVAL 0x1 Character; ASMC CheckMagicASMC|1"

//Event Definitions
#define LoadUnit(x,y) "UNIT Seth Cavalier 0x00 Level(1,Ally,1) [x,y] 0x00 0x00 0x00 0x00 [0x00] NoAI" //for units in player placement with prep menu
#define LoadUnit(unitid,x,y) "UNIT unitid Cavalier 0x00 Level(1,Ally,1) [x,y] 0x00 0x00 0x00 0x00 [0x00] NoAI"
#define Unit(x,y) "LoadUnit(x,y)"
#define Unit(unitid,x,y) "LoadUnit(unitid,x,y)"
#define LoadUnitReda(unitid,x,y,reda) "UNIT unitid Cavalier 0x00 Level(1,Ally,1) [x,y] 0x00 0x00 1 reda [0x00] NoAI" //for units in player placement with prep menu
#define UnitReda(unitid,x,y,reda) "LoadUnitReda(unitid,x,y,reda)"
#define UnitReda(x,y,reda) "LoadUnitReda(Seth,x,y,reda)"
#define Kill(unitid) "SET_SOMETHING unitid;DISA_IF unitid"
#define Kill(X,Y) "SVAL 0xB Coords(X,Y) ; SET_SOMETHING 0xFFFE ; DISA_IF 0xFFFE"
#define ClearAll "CLEE 0x0; CLEA 0x0; CLEN 0x0"
#define Textbox(textid) "TUTORIALTEXTBOXSTART; TEXTSHOW textid; TEXTEND"
#define CenterTextbox(textid) "CenterTutorialTextBox; TUTORIALTEXTBOXSTART; TEXTSHOW textid; TEXTEND"
#define GiveItem(Item,Character) "CALL $591F40; SMOV 0x3 Item ; GIVEITEMTO Character"
#define GiveGold(money) "CALL $591F40; SVAL 0x3 money; GIVEITEMTOMAIN 0"
#define TileChange(X,Y) "SVAL 0xB Coords(X,Y) ; TILECHANGE 0xFFFF"
#define CamOn "EVBIT_T 0x9"
#define CamOff "EVBIT_F 0x9"
//#define WarpIn(X,Y,UnitPointer) "SVAL 0xB Coords(X,Y) ; WARP_IN ; LOAD1 0x1 UnitPointer ; ENUN"
#define WarpOut(X,Y) "SVAL 0xB Coords(X,Y) ; WARP_OUT ; DISA 0xFFFE; STAL 60"
#define EndConvo "CALL $9EE2C4"
#define MoveCoords(X1,Y1,X2,Y2) "SVAL 0xB Coords(X1,Y1) ; MOVE 0x0 0xFFFE [X2,Y2]"
#define MoveCoords(X1,Y1,Speed,X2,Y2) "SVAL 0xB Coords(X1,Y1) ; MOVE Speed 0xFFFE [X2,Y2]"
#define Coords(xcoord,ycoord) "(ycoord<<16)|xcoord"
#define PromotionEvent(Character,Class,Item) "SVAL 0x2 0x35; CALL 0x9EE2E8; FADI 16; EVBIT_MODIFY 0x0; PROM Character Class Item; EVBIT_MODIFY 0x4; FADU 16; EVBIT_T 0x7"
#define SetAI(unitid,ai1,ai2,ai3,ai4) "SVAL 0x1 ai1|(ai2<<8)|(ai3<<16)|(ai4<<24); CHAI unitid"
#define SetAI(x,y,ai1,ai2,ai3,ai4) "SVAL 0x1 ai1|(ai2<<8)|(ai3<<16)|(ai4<<24); CHAI [x,y]"
#define SetAI(unitid,ai1,ai2)"SVAL 0x1 ai1|(ai2<<8); CHAI unitid"
#define SetAI(x,y,ai1,ai2) "SVAL 0x1 ai1|(ai2<<8); CHAI [x,y]"
#define SetActiveAI(ai1,ai2) "SVAL 0x1 ai1|(ai2<<8); CHECK_ACTIVE; SADD 0x0C2; CHAI 0xFFFF" //needs snakey's fix, experimental
#define Increment(counterID) "COUNTER_ADD counterID 0x0"
#define Decrement(counterID) "COUNTER_SUBTRACT counterID 0x0"
#define SpawnReinforcements(UnitGroup) "CamOn; LOAD1 0x1 UnitGroup; ENUN; CamOff; STAL 30"
#define MaxTurns(TurnNum) "256 - TurnNum"
#define InfiniteTurnEventPlayer(flag,event,turn) "TurnEventPlayer(flag,event,turn,MaxTurns(turn))"
#define InfiniteTurnEventEnemy(flag,event,turn) "TurnEventEnemy(flag,event,turn,MaxTurns(turn))"
#define InfiniteTurnEventNPC(flag,event,turn) "TurnEventNPC(flag,event,turn,MaxTurns(turn))"
#define LearnSkill(Unit,Skill) "SVAL 0x1 Skill; SVAL 0x2 Unit; ASMC (ASMC_HasSkill|1); BNE 0xED6B 0xC 0x0; ASMC (ASMC_LearnNewSkill|1); LABEL 0xED6B"
#define ForgetSkill(Unit,Skill) "SVAL 0x1 Skill; SVAL 0x2 Unit; ASMC (ASMC_HasSkill|1); BEQ 0xED6C 0xC 0x0; ASMC (ASMC_ForgetSkill|1); LABEL 0xED6C"
#define MuteMusic "MUSCFAST 0x7FFF"
#define SetHP(number,x,y) "SVAL 0x1 number; SVAL 0xB Coords(x,y); SET_HP 0xFFFE"
#define TakeGold(Amount) "SVAL 0x3 Amount; GIVETOSLOT3"
#define TextNoFade(bg,text) "REMOVEPORTRAITS; SVAL 0x2 bg; CALL 0x9EE2E8; TEXTSTART; TEXTSHOW text; TEXTEND; REMA"
#define DoorFlag(flag,doorx,doory) "DOOR flag [doorx,doory] 0x12"
#define VillageEventItemNoEnd(textID,background,item) "MUSI; SMOV 0x2 background; SMOV 0x3 textID; CALL $9EE310; MUNO; CALL $591F40; SMOV 0x3 item; GIVEITEMTO 0xFFFF"
#define VillageEventMoneyNoEnd(textID,background,money) "MUSI; SMOV 0x2 background; SMOV 0x3 textID; CALL $9EE310; MUNO; CALL $591F40; SMOV 0x3 money; GIVEITEMTOMAIN 0"
#define HouseEventNoEnd(textID,background) "MUSI; SMOV 2 background; SMOV 3 textID; CALL $9EE310; MUNO"
#define ConvoEventNoEnd(textID) "MUSI; TEXTSTART; TEXTSHOW textID; TEXTEND; REMA; MUNO"
#define WarpTo(unitid,xcoord,ycoord) "CHECK_COORDS unitid; SADD 0xCB; WARP_OUT; REMU unitid; STAL 60; SVAL 0x2 unitid; _WARP 0xFFFF 0xFFFD [xcoord,ycoord]; STAL2 10; CALL 0x9EE4F8; REVEAL unitid; STAL 60"