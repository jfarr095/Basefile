// Character
#define SetCharacterName(CharacterID,Name) "PUSH; ORG CharacterTable + (CharacterID * 52); SHORT Name; POP"
#define SetCharacterDescription(CharacterID,Description) "PUSH; ORG CharacterTable + 0x2 + (CharacterID * 52); SHORT Description; POP"
#define SetCharacterID(CharacterID,Value) "PUSH; ORG CharacterTable + 0x4 + (CharacterID * 52); BYTE Value; POP"
#define SetCharacterClass(CharacterID,Class) "PUSH; ORG CharacterTable + 0x5 + (CharacterID * 52); BYTE Class; POP"
#define SetCharacterPortrait(CharacterID,Portrait) "PUSH; ORG CharacterTable + 0x6 + (CharacterID * 52); SHORT Portrait; POP"
#define SetCharacterFaction(CharacterID,Value) "PUSH; ORG CharacterTable + 0x8 + (CharacterID * 52); BYTE Value; POP"
#define SetCharacterAffinity(CharacterID,Affinity) "PUSH; ORG CharacterTable + 0x9 + (CharacterID * 52); BYTE Affinity; POP"
#define SetCharacterSortOrder(CharacterID,Value) "PUSH; ORG CharacterTable + 0x10 + (CharacterID * 52); BYTE Value; POP"

// Character ETC

// Class
#define SetClassName(ClassID,Name) "PUSH; ORG ClassTable + (ClassID * 84); SHORT Name; POP"
#define SetClassDescription(ClassID,Description) "PUSH; ORG ClassTable + 0x2 + (ClassID * 84); SHORT Description; POP"
#define SetClassID(ClassID,Value) "PUSH; ORG ClassTable + 0x4 + (ClassID * 84); BYTE Value; POP"
#define SetClassPromotion(ClassID,Promotion) "PUSH; ORG ClassTable + 0x5 + (ClassID * 84); BYTE Promotion; POP"
#define SetClassMovingMapSprite(ClassID,Value) "PUSH; ORG ClassTable + 0x6 + (ClassID * 84); BYTE Value; POP"
#define SetClassMoveSpeed(ClassID,MoveSpeed) "PUSH; ORG ClassTable + 0x7 + (ClassID * 84); BYTE MoveSpeed; POP"
#define SetClassClassCard(ClassID,ClassCard) "PUSH; ORG ClassTable + 0x8 + (ClassID * 84); SHORT ClassCard; POP"
#define SetClassSortOrder(ClassID,Value) "PUSH; ORG ClassTable + 0xA + (ClassID * 84); BYTE Value; POP"
#define SetClassHP(ClassID,HP) "PUSH; ORG ClassTable + 0xB + (ClassID * 84); BYTE HP; POP"
#define SetClassStr(ClassID,Str) "PUSH; ORG ClassTable + 0xC + (ClassID * 84); BYTE Str; POP"
#define SetClassMag(ClassID,Mag) "PUSH; ORG MagClassTable + (ClassID * 0x4); BYTE Mag; POP"
#define SetClassSkl(ClassID,Skl) "PUSH; ORG ClassTable + 0xD + (ClassID * 84); BYTE Skl; POP"
#define SetClassSpd(ClassID,Spd) "PUSH; ORG ClassTable + 0xE + (ClassID * 84); BYTE Spd; POP"
#define SetClassDef(ClassID,Def) "PUSH; ORG ClassTable + 0xF + (ClassID * 84); BYTE Def; POP"
#define SetClassRes(ClassID,Res) "PUSH; ORG ClassTable + 0x10 + (ClassID * 84); BYTE Res; POP"
#define SetClassCon(ClassID,Con) "PUSH; ORG ClassTable + 0x11 + (ClassID * 84); BYTE Con; POP"
#define SetClassMove(ClassID,Move) "PUSH; ORG ClassTable + 0x12 + (ClassID * 84); BYTE Move; POP"
#define SetClassMaxHP(ClassID,HP) "PUSH; ORG ClassTable + 0x13 + (ClassID * 84); BYTE HP; POP"
#define SetClassMaxStr(ClassID,Str) "PUSH; ORG ClassTable + 0x14 + (ClassID * 84); BYTE Str; POP"
#define SetClassMaxMag(ClassID,Mag) "PUSH; ORG MagClassTable + 0x2 (ClassID * 0x4); BYTE Mag; POP"
#define SetClassMaxSkl(ClassID,Skl) "PUSH; ORG ClassTable + 0x15 + (ClassID * 84); BYTE Skl; POP"
#define SetClassMaxSpd(ClassID,Spd) "PUSH; ORG ClassTable + 0x16 + (ClassID * 84); BYTE Spd; POP"
#define SetClassMaxDef(ClassID,Def) "PUSH; ORG ClassTable + 0x17 + (ClassID * 84); BYTE Def; POP"
#define SetClassMaxRes(ClassID,Res) "PUSH; ORG ClassTable + 0x18 + (ClassID * 84); BYTE Res; POP"
#define SetClassMaxCon(ClassID,Con) "PUSH; ORG ClassTable + 0x19 + (ClassID * 84); BYTE Con; POP"
#define SetClassRelativePower(ClassID,RP) "PUSH; ORG ClassTable + 0x1A + (ClassID * 84); BYTE RP; POP"
#define SetClassHPGrowth(ClassID,HP) "PUSH; ORG ClassTable + 0x1B + (ClassID * 84); BYTE HP; POP"
#define SetClassStrGrowth(ClassID,Str) "PUSH; ORG ClassTable + 0x1C + (ClassID * 84); BYTE Str; POP"
#define SetClassMagGrowth(ClassID,Mag) "PUSH; ORG MagClassTable + 0x1 + (ClassID * 0x4); BYTE Mag; POP"
#define SetClassSklGrowth(ClassID,Skl) "PUSH; ORG ClassTable + 0x1D + (ClassID * 84); BYTE Skl; POP"
#define SetClassSpdGrowth(ClassID,Spd) "PUSH; ORG ClassTable + 0x1E + (ClassID * 84); BYTE Spd; POP"
#define SetClassDefGrowth(ClassID,Def) "PUSH; ORG ClassTable + 0x1F + (ClassID * 84); BYTE Def; POP"
#define SetClassResGrowth(ClassID,Res) "PUSH; ORG ClassTable + 0x20 + (ClassID * 84); BYTE Res; POP"
#define SetClassLuckGrowth(ClassID,Luck) "PUSH; ORG ClassTable + 0x21 + (ClassID * 84); BYTE Luck; POP"
#define SetClassHPPromoBonus(ClassID,HP) "PUSH; ORG ClassTable + 0x22 + (ClassID * 84); BYTE HP; POP"
#define SetClassStrPromoBonus(ClassID,Str) "PUSH; ORG ClassTable + 0x23 + (ClassID * 84); BYTE Str; POP"
#define SetClassMagPromoBonus(ClassID,Mag) "PUSH; ORG MagClassTable 0x3 + (ClassID * 0x4); BYTE Mag; POP"
#define SetClassSklPromoBonus(ClassID,Skl) "PUSH; ORG ClassTable + 0x24 + (ClassID * 84); BYTE Skl; POP"
#define SetClassSpdPromoBonus(ClassID,Spd) "PUSH; ORG ClassTable + 0x25 + (ClassID * 84); BYTE Spd; POP"
#define SetClassDefPromoBonus(ClassID,Def) "PUSH; ORG ClassTable + 0x26 + (ClassID * 84); BYTE Def; POP"
#define SetClassResPromoBonus(ClassID,Res) "PUSH; ORG ClassTable + 0x27 + (ClassID * 84); BYTE Res; POP"
#define SetClassAbility1(ClassID,Ability) "PUSH; ORG ClassTable + 0x28 + (ClassID * 84); BYTE Ability; POP"
#define SetClassAbility2(ClassID,Ability) "PUSH; ORG ClassTable + 0x29 + (ClassID * 84); BYTE Ability; POP"
#define SetClassAbility3(ClassID,Ability) "PUSH; ORG ClassTable + 0x2A + (ClassID * 84); BYTE Ability; POP"
#define SetClassAbility4(ClassID,Ability) "PUSH; ORG ClassTable + 0x2B + (ClassID * 84); BYTE Ability; POP"
#define SetClassSwordRank(ClassID,Rank) "PUSH; ORG ClassTable + 0x2C + (ClassID * 84); BYTE Rank; POP"
#define SetClassLanceRank(ClassID,Rank) "PUSH; ORG ClassTable + 0x2D + (ClassID * 84); BYTE Rank; POP"
#define SetClassAxeRank(ClassID,Rank) "PUSH; ORG ClassTable + 0x2E + (ClassID * 84); BYTE Rank; POP"
#define SetClassBowRank(ClassID,Rank) "PUSH; ORG ClassTable + 0x2F + (ClassID * 84); BYTE Rank; POP"
#define SetClassStaffRank(ClassID,Rank) "PUSH; ORG ClassTable + 0x30 + (ClassID * 84); BYTE Rank; POP"
#define SetClassAnimaRank(ClassID,Rank) "PUSH; ORG ClassTable + 0x31 + (ClassID * 84); BYTE Rank; POP"
#define SetClassLightRank(ClassID,Rank) "PUSH; ORG ClassTable + 0x32 + (ClassID * 84); BYTE Rank; POP"
#define SetClassDarkRank(ClassID,Rank) "PUSH; ORG ClassTable + 0x33 + (ClassID * 84); BYTE Rank; POP"
//#define SetClassAnimation(ClassID,Animation) "PUSH; ORG ClassTable + 0x34 + (ClassID * 84); WORD Animation; POP"
#define SetClassMoveCost(ClassID,MoveCost) "PUSH; ORG ClassTable + 0x38 + (ClassID * 84); WORD MoveCost; POP"
#define SetClassRainMoveCost(ClassID,MoveCost) "PUSH; ORG ClassTable + 0x3C + (ClassID * 84); WORD MoveCost; POP"
#define SetClassSnowMoveCost(ClassID,MoveCost) "PUSH; ORG ClassTable + 0x40 + (ClassID * 84); WORD MoveCost; POP"
#define SetClassTerrainAvo(ClassID,TData) "PUSH; ORG ClassTable + 0x44 + (ClassID * 84); WORD TData; POP"
#define SetClassTerrainDef(ClassID,TData) "PUSH; ORG ClassTable + 0x48 + (ClassID * 84); WORD TData; POP"
#define SetClassTerrainRes(ClassID,TData) "PUSH; ORG ClassTable + 0x4C + (ClassID * 84); WORD TData; POP"
#define SetClassClassType(ClassID,Type) "PUSH; ORG ClassTable + 0x50 + (ClassID * 84); WORD Type; POP"

// Class ETC
#define SetClassPromos(ClassID,PromotionOne,PromotionTwo) "PUSH; ORG (PromotionBranchTable-2) + (ClassID * 2); BYTE PromotionOne PromotionTwo; POP"
#define SetClassSkill(ClassID,SkillID) "PUSH; ORG (ClassSkillTable + ClassID); BYTE SkillID; POP"
#define SetClassLearnedSkills(ClassID,SkillList) "PUSH; ORG (ClassLevelUpSkillTable + (ClassID * 4)); POIN SkillList; POP"
#define SetClassEXPGainMultiplier(ClassID,Value) "PUSH; ORG ModularEXPClassTable + (ClassNumber * 20); BYTE Value; POP"
#define SetClassEXPGainDivisor(ClassID,Value) "PUSH; ORG ModularEXPClassTable + 0x1 + (ClassNumber * 20); BYTE Value; POP"
#define SetClassEXPGrantMultiplier(ClassID,Value) "PUSH; ORG ModularEXPClassTable + 0x2 + (ClassNumber * 20); BYTE Value; POP"
#define SetClassEXPGrantDivisor(ClassID,Value) "PUSH; ORG ModularEXPClassTable + 0x3 + (ClassNumber * 20); BYTE Value; POP"
#define SetClassMovementSound(ClassID,Sound) "PUSH; ORG WalkingSoundTable + ClassNumber; BYTE Sound; POP"

// Item
#define SetItemType(ItemID,Type) "PUSH; ORG ItemTable + 0x7 + (ItemID * 36); BYTE Type; POP"
#define SetItemAbility1(ItemID,Ability) "PUSH; ORG ItemTable + 0x8 + (ItemID * 36); BYTE Ability; POP"
#define SetItemAbility3(ItemID,Ability) "PUSH; ORG ItemTable + 0xA + (ItemID * 36); BYTE Ability; POP"
#define SetItemAbility4(ItemID,Ability) "PUSH; ORG ItemTable + 0xB + (ItemID * 36); BYTE Ability; POP"
#define SetItemDurability(ItemID,Durability) "PUSH; ORG ItemTable + 0x14 + (ItemID * 36); BYTE Durability; POP"
#define SetItemMt(ItemID,Might) "PUSH; ORG ItemTable + 0x15 + (ItemID * 36); BYTE Might; POP"
#define SetItemAccuracy(ItemID,Acc) "PUSH; ORG ItemTable + 0x16 + (ItemID * 36); BYTE Acc; POP"
#define SetItemWeight(ItemID,Weight) "PUSH; ORG ItemTable + 0x17 + (ItemID * 36); BYTE Weight; POP"
#define SetItemValue(ItemID,Value) "PUSH; ORG ItemTable + 0x1A + (ItemID * 36); SHORT Value; POP"
#define SetItemRank(ItemID,Rank) "PUSH; ORG ItemTable + 0x1C + (ItemID * 36); BYTE Rank; POP"
#define SetItemIcon(ItemID,Icon) "PUSH; ORG ItemTable + 0x1D + (ItemID * 36); BYTE Icon; POP"
#define SetItemExtraByte(ItemID,Value) "PUSH; ORG ItemTable + 0x22 + (ItemID * 36); BYTE Value; POP"

// Item ETC